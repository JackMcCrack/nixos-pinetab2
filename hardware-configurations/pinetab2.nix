# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "tmpfs";
      fsType = "tmpfs";
    };

  fileSystems."/nix" =
    { device = "/dev/disk/by-uuid/94a02f18-34ac-41e8-9d71-591f262764c6";
      fsType = "btrfs";
      options = [ "subvol=nixos/@nix" ];
    };

  fileSystems."/var/lib/waydroid" =
    { device = "/nix/nixos/@nix/wayd";
      fsType = "none";
      options = [ "bind" ];
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/94a02f18-34ac-41e8-9d71-591f262764c6";
      fsType = "btrfs";
      options = [ "subvol=nixos/@boot" ];
    };

  fileSystems."/etc/NetworkManager/system-connections" =
    { device = "/dev/disk/by-uuid/94a02f18-34ac-41e8-9d71-591f262764c6";
      fsType = "btrfs";
      options = [ "subvol=@sysconn" ];
    };

  fileSystems."/home/user1" =
    { device = "/dev/disk/by-uuid/94a02f18-34ac-41e8-9d71-591f262764c6";
      fsType = "btrfs";
      options = [ "subvol=nixos/@user1" ];
    };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlan0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "aarch64-linux";
}
